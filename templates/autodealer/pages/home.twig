{% extends 'app.twig' %}
{% block MAIN %}
{#% cache 'main' ~ resource.id %#}
{% set catalog_number = runSnippet('DocInfo', {docid: modx.config['site_start'] , field: 'catalog_number' }) %}

{% set DLCatalog = runSnippet('DocLister', {
id: 'catalog',
controller: 'catalog_filters',
display: 4,
parents: catalog_number,
depth: 5,
orderBy: 'car-price',
order: 'RAND()',
tvSortType: 'SIGNED',
tvList:'car-price,old-car-price,car_photos,run,engine_power,gear,year, image',
ownerTPL: '@T_FILE:partials/wrap',
tpl:'@T_FILE:partials/catalogcard',
paginate:'pages',
TplNextP:'',
TplPrevP:'',
TplPage:'@CODE:<li class="page-item"><a class="page-link" href="[+link+]">[+num+]</a></li>',
TplCurrentPage:'@CODE: <li class="page-item active" aria-current="page"><span class="page-link">[+num+]</span></li>',
TplWrapPaginate:'@CODE:<ul class="pagination">[+wrap+]</ul>',
filter: 'filters',
filterRangeSeparator: ':',
filterValuesSeparator: '|',
filterDelimiter: '||',
__filterPriceId: 14,
filterList: '42,43,19',
_filterList: '19:checkbox,20:checkbox,42:checkbox,43:checkbox',
filterTpl: '@T_FILE:partials/filters/tpl2',
filterOwnerRange: '@T_FILE:partials/filters/ownerRange2',
filterTplRange: '@T_FILE:partials/filters/tplRange2',
filterOwnerCheckbox: '@T_FILE:partials/filters/ownerCheckbox2',
filterTplCheckbox: '@T_FILE:partials/filters/tplCheckbox2',
tvSortType: 'UNSIGNED',
api: 0,
noneTPL:'@CODE: <div class="container">
	<div class="row">
		<div class="col text-center">
			<h2 class="display-4 catalog-block h2">По вашим критериям А/М не найдены, попробуйте немного изменить условия поиска</h1>
		</div>
	</div>
</div>',
})
%}
{% set banner = runSnippet('multiTV', {tvName: 's-vigoda-pulkovo1', docid: 'id', display:'all',
rowTpl:'@CODE:
<div class="timer-block pt-5 pb-3 mb-5" style="background: url([+image+]) center / cover;
">
	<div class="container">
		<div class="row">
			[+catalog.filters+]
			<div class="col-md-6">
				<div class="timer text-center">
					<div class="name mb-2">
						Специальное предложение <br />
						на покупку авто
					</div>
					<span class="date d-inline-block py-3 px-4">до 15 июня</span>
					<button data-toggle="modal" data-target="#popup">Посмотреть авто по акции</button>
					<div class="flex pt-4 mb-4">
						<div class="item">
							<span class="d-block mb-2">13</span>
							дней
						</div>
						<div class="item">
							<span class="d-block mb-2">12</span>
							часов
						</div>
						<div class="item">
							<span class="d-block mb-2">48</span>
							минут
						</div>
						<div class="item">
							<span class="d-block mb-2">16</span>
							секунд
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
'}) %}
{{banner |raw}}
{#{ plh['catalog.filters'] | raw }#}
{% include('partials/brands.twig') %}
<div class="actions-block pb-3">
	<div class="container">
		<div class="flex">
			<div class="block-name mb-4">
				Автомобили <span>по специальному предложению</span>
			</div>
			<a href="/avtomobili-s-probegom2" class="top-link mb-4">Показать все автомобили →</a>
		</div>
		<div class="row">
			{{DLCatalog|raw}}
		</div>
	</div>
</div>
{% include '/partials/advantages.twig' %}
{{ runSnippet('Form', {
formid: 'FormCallback',
path: '/templates/autodealer/partials/forms/feedback2/',
extension: 'twig'
}) | raw }}   
{% include '/partials/banks.twig' %}
<div class="credit-banner mb-5">
	<div class="container">
		<div class="banner">
			<div class="row">
				<div class="col-lg-5">
					<div class="text">
						<p class="mb-2">Рассрочка</p>
						<div class="percent mb-2">
							0%
						</div>
						на весь <br />модельный ряд
					</div>
				</div>
				<div class="col-lg-7">
					<div class="row">
						<div class="col-6">
							<div class="item pl-sm-4 pl-2">
								выгода до <br />500 000 ₽
							</div>
						</div>
						<div class="col-6">
							<div class="item pl-sm-4 pl-2">
								автомобили <br />в наличии
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
{% include '/partials/actions.twig' %}
{{ runSnippet('Form', {
formid: 'FormCallback',
path: '/templates/autodealer/partials/forms/feedback/',
extension: 'twig'
}) | raw }}
{#% include '/partials/podbor.twig' %#}
{# <div class="feedback-block">
	<div class="container-fluid">
		{{ runSnippet('Form', {
		formid: 'FormCallback',
		path: '/templates/rofl/partials/forms/feedback/',
		extension: 'twig'
		}) | raw }}
	</div>
</div>#}
{#% include('partials/actions.twig') %#}
{% include('partials/contacts.twig') %}
{#% include '/partials/tradein.twig' %#}
{#% endcache %#}
<script type="text/javascript">
function getMonthInGenitive(monthNumber) {
    const monthsGenitive = [
        'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',
        'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'
    ];

    return monthsGenitive[monthNumber];
}

document.addEventListener("DOMContentLoaded", function() {
    let targetDate = new Date();
    targetDate.setDate(targetDate.getDate() + 7);

    const targetSpan = document.querySelector('.timer .date');
    targetSpan.textContent = `до ${targetDate.getDate()} ${getMonthInGenitive(targetDate.getMonth())}`;

    function updateCounter() {
        let now = new Date().getTime();
        let distance = targetDate - now;

        // Вычислить дни, часы, минуты, секунды
        let days = Math.floor(distance / (1000 * 60 * 60 * 24));
        let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        let seconds = Math.floor((distance % (1000 * 60)) / 1000);

        // Устанавливаем значения на странице
        let timerItems = document.querySelectorAll('.timer .item .d-block');
        timerItems[0].textContent = days;
        timerItems[1].textContent = hours;
        timerItems[2].textContent = minutes;
        timerItems[3].textContent = seconds;

        // Если время вышло
        if (distance < 0) {
            clearInterval(timerInterval);
            document.querySelector('.timer .name').textContent = 'Акция завершилась';
            document.querySelector('.timer .date').textContent = '';
            document.querySelector('.timer .flex').style.display = 'none';
        }
    }

    // Обновляем обратный отсчет каждую секунду
    let timerInterval = setInterval(updateCounter, 1000);

    // Запустить функцию в первый раз
    updateCounter();
});


</script>

{% endblock %}
